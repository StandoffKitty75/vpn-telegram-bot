# handlers/circle.py

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram import Bot

router = Router()

# –•—Ä–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–∏—Ö /circle
user_circle_mode = set()

@router.message(Command("circle"))
async def cmd_circle(message: Message):
    user_circle_mode.add(message.from_user.id)
    await message.answer("–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –º–Ω–µ –≤–∏–¥–µ–æ, –∏ —è —Å–¥–µ–ª–∞—é –∏–∑ –Ω–µ–≥–æ –∫—Ä—É–∂–æ—á–µ–∫ üé•")

@router.message(F.content_type == "video")
async def handle_video(message: Message, bot: Bot):
    if message.from_user.id not in user_circle_mode:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /circle.")
        return

    await message.chat.do("upload_video_note")

    await bot.send_video_note(
        chat_id=message.chat.id,
        video_note=message.video.file_id,
        duration=message.video.duration,
        length=240
    )

    user_circle_mode.remove(message.from_user.id)

@router.message(F.content_type == "video_note")
async def handle_video_note(message: Message):
    await message.answer("–≠—Ç–æ —É–∂–µ –∫—Ä—É–∂–æ–∫ üòâ –ü—Ä–∏—à–ª–∏ –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /circle.")

def register_handlers(router_obj: Router):
    router_obj.include_router(router)