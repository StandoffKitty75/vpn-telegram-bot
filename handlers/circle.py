# handlers/circle.py

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.utils.chat_action import ChatActionSender

router = Router()

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–∏–µ —Ä–µ–∂–∏–º "–∫—Ä—É–∂–æ—á–∫–∞"
user_circle_mode = set()


@router.message(Command("circle"))
async def cmd_circle(message: Message):
    user_id = message.from_user.id
    user_circle_mode.add(user_id)
    await message.answer("–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –º–Ω–µ –≤–∏–¥–µ–æ, –∏ —è —Å–¥–µ–ª–∞—é –∏–∑ –Ω–µ–≥–æ –∫—Ä—É–∂–æ—á–µ–∫ üé•")


@router.message(F.video)
async def handle_video(message: Message):
    user_id = message.from_user.id

    if user_id not in user_circle_mode:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /circle.")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Ç-—ç–∫—à–µ–Ω "–∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä—É–∂–∫–∞"
        async with ChatActionSender.upload_video_note(chat_id=message.chat.id, bot=message.bot):
            await message.bot.send_video_note(
                chat_id=message.chat.id,
                video_note=message.video.file_id,
                duration=message.video.duration,
                length=360
            )

    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—Ä—É–∂–æ—á–∫–∞: {str(e)}")

    finally:
        user_circle_mode.discard(user_id)


@router.message(F.video_note)
async def handle_video_note(message: Message):
    await message.answer("–≠—Ç–æ —É–∂–µ –∫—Ä—É–∂–æ—á–µ–∫ üòâ –ü—Ä–∏—à–ª–∏ –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /circle.")

# –£–î–ê–õ–ò–¢–ï —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é - –æ–Ω–∞ –Ω–µ –Ω—É–∂–Ω–∞
# def register_handlers(router_obj: Router):
#     router_obj.include_router(router)